[{"/Users/machoair/Desktop/react-test/todo-app/src/reportWebVitals.ts":"1","/Users/machoair/Desktop/react-test/todo-app/src/App.tsx":"2","/Users/machoair/Desktop/react-test/todo-app/src/index.tsx":"3","/Users/machoair/Desktop/react-test/todo-app/src/components/pages/Home.tsx":"4","/Users/machoair/Desktop/react-test/todo-app/src/containers/pages/Home.tsx":"5","/Users/machoair/Desktop/react-test/todo-app/src/actions.ts":"6","/Users/machoair/Desktop/react-test/todo-app/src/containers/pages/ItemDetails.tsx":"7","/Users/machoair/Desktop/react-test/todo-app/src/reducer.ts":"8","/Users/machoair/Desktop/react-test/todo-app/src/containers/pages/NewItem.tsx":"9","/Users/machoair/Desktop/react-test/todo-app/src/components/pages/NewItem.tsx":"10","/Users/machoair/Desktop/react-test/todo-app/src/components/pages/ItemDetails.tsx":"11","/Users/machoair/Desktop/react-test/todo-app/src/containers/pages/EditItem.tsx":"12","/Users/machoair/Desktop/react-test/todo-app/src/components/pages/EditItem.tsx":"13","/Users/machoair/Desktop/react-test/todo-app/src/data/Item.ts":"14","/Users/machoair/Desktop/react-test/todo-app/src/components/templates/Layout.tsx":"15"},{"size":485,"mtime":1607955893796,"results":"16","hashOfConfig":"17"},{"size":1976,"mtime":1610277286266,"results":"18","hashOfConfig":"17"},{"size":800,"mtime":1608950242524,"results":"19","hashOfConfig":"17"},{"size":1640,"mtime":1610261576602,"results":"20","hashOfConfig":"17"},{"size":1596,"mtime":1610258025268,"results":"21","hashOfConfig":"17"},{"size":668,"mtime":1609073016292,"results":"22","hashOfConfig":"17"},{"size":3004,"mtime":1610257895818,"results":"23","hashOfConfig":"17"},{"size":1613,"mtime":1609117665572,"results":"24","hashOfConfig":"17"},{"size":2309,"mtime":1610258015470,"results":"25","hashOfConfig":"17"},{"size":875,"mtime":1609158582729,"results":"26","hashOfConfig":"17"},{"size":1109,"mtime":1609156986863,"results":"27","hashOfConfig":"17"},{"size":3536,"mtime":1610257976827,"results":"28","hashOfConfig":"17"},{"size":990,"mtime":1609157937546,"results":"29","hashOfConfig":"17"},{"size":233,"mtime":1609506443419,"results":"30","hashOfConfig":"17"},{"size":9947,"mtime":1610280167436,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"pk6x8l",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/machoair/Desktop/react-test/todo-app/src/reportWebVitals.ts",[],["71","72","73","74","75"],"/Users/machoair/Desktop/react-test/todo-app/src/App.tsx",[],["76","77","78","79","80"],"/Users/machoair/Desktop/react-test/todo-app/src/index.tsx",[],"/Users/machoair/Desktop/react-test/todo-app/src/components/pages/Home.tsx",[],"/Users/machoair/Desktop/react-test/todo-app/src/containers/pages/Home.tsx",["81"],"import React, { FC, useEffect, useState } from 'react';\n// import { useSelector } from 'react-redux';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\n// import { TodoState, TodoItemState } from '../../reducer';\nimport Home from '../../components/pages/Home';\n\nconst EnhancedHome: FC<{ firebaseApp: firebase.app.App | undefined }> = ({\n  firebaseApp,\n}) => {\n  // const content = useSelector<TodoState, { [key: number]: TodoItemState }>(\n  //   (state) => state.content,\n  // );\n  const [items, setItems] = useState<{ id: number; title: string }[]>([]);\n  useEffect(() => {\n    if (typeof firebaseApp !== 'undefined') {\n      const onValueChange = (snapshot: firebase.database.DataSnapshot) => {\n        const newState: { id: number; title: string }[] = [];\n        snapshot.forEach((childSnapshot: firebase.database.DataSnapshot) => {\n          const { key } = childSnapshot;\n          // eslint-disable-next-line\n          const title = childSnapshot.child('title').val();\n          if (typeof key === 'string' && typeof title === 'string') {\n            newState.push({\n              id: parseInt(key, 10),\n              title,\n            });\n          }\n        });\n        setItems(newState);\n      };\n      firebaseApp.database().ref('items/').on('value', onValueChange);\n\n      return () => {\n        firebaseApp.database().ref('items/').off('value', onValueChange);\n      };\n    }\n\n    return () => {\n      console.log('firebaseApp is undefined');\n    };\n  }, [firebaseApp]);\n\n  return (\n    <>\n      <Home items={items} />\n    </>\n  );\n};\n\nexport default EnhancedHome;\n","/Users/machoair/Desktop/react-test/todo-app/src/actions.ts",[],["82","83","84","85","86"],"/Users/machoair/Desktop/react-test/todo-app/src/containers/pages/ItemDetails.tsx",["87","88"],"import React, { FC, useState, useEffect } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\n// import { useParams, useNavigate, Navigate } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/firebase-database';\n\nimport ItemDetails from '../../components/pages/ItemDetails';\n// import { deleteItem } from '../../actions';\n// import { TodoState, TodoItemState } from '../../reducer';\nimport { ItemState, initailItemState } from '../../data/Item';\n\nconst EnhancedItemDetails: FC<{\n  firebaseApp: firebase.app.App | undefined;\n}> = ({ firebaseApp }) => {\n  const { itemId } = useParams();\n  // const dispatch = useDispatch();\n  const [item, setItem] = useState<ItemState>(initailItemState);\n  const navigate = useNavigate();\n  // const content = useSelector<TodoState, { [key: number]: TodoItemState }>(\n  //   (state) => state.content,\n  // );\n  useEffect(() => {\n    if (typeof firebaseApp !== 'undefined') {\n      firebaseApp\n        .database()\n        .ref(`items/${itemId}/`)\n        .once('value')\n        .then((snapshot) => {\n          const { key } = snapshot;\n          // eslint-disable-next-line\n          const { title, body, createdAt, updatedAt } = snapshot.val();\n          if (\n            typeof key === 'string' &&\n            typeof title === 'string' &&\n            typeof body === 'string' &&\n            typeof createdAt === 'number' &&\n            typeof updatedAt === 'number'\n          ) {\n            setItem({\n              id: parseInt(key, 10),\n              title,\n              body,\n              createdAt,\n              updatedAt,\n            });\n          } else {\n            navigate('/');\n          }\n        })\n        .catch(() => {\n          alert('Synchronization failed');\n        });\n    }\n  }, [firebaseApp, itemId, navigate]);\n\n  const deleteFunc = () => {\n    if (typeof firebaseApp !== 'undefined') {\n      firebaseApp\n        .database()\n        .ref(`items/${itemId}/`)\n        .remove()\n        .then(() => {\n          navigate('/');\n        })\n        .catch(() => {\n          alert('Remove failed');\n        });\n    }\n  };\n\n  return (\n    <ItemDetails\n      itemId={itemId}\n      title={item.title}\n      body={item.body}\n      createdAt={item.createdAt}\n      updatedAt={item.updatedAt}\n      deleteFunc={deleteFunc}\n    />\n  );\n  // const contentItemIds = Object.keys(content);\n\n  // if (contentItemIds.includes(itemId)) {\n  //   const { title, body, createdAt, updatedAt } = content[Number(itemId)];\n  //   const deleteFunc = () => {\n  //     dispatch(deleteItem(Number(itemId)));\n  //     navigate('/');\n  //   };\n\n  //   return (\n  //     <ItemDetails\n  //       itemId={itemId}\n  //       title={title}\n  //       body={body}\n  //       createdAt={createdAt}\n  //       updatedAt={updatedAt}\n  //       deleteFunc={deleteFunc}\n  //     />\n  //   );\n  // }\n\n  // return <Navigate to=\"/\" replace />;\n};\n\nexport default EnhancedItemDetails;\n",["89","90","91","92","93"],"/Users/machoair/Desktop/react-test/todo-app/src/reducer.ts",[],["94","95","96","97","98"],"/Users/machoair/Desktop/react-test/todo-app/src/containers/pages/NewItem.tsx",["99","100"],"import React, { FC, useRef } from 'react';\n// import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\n// import { addItem } from '../../actions';\nimport NewItem from '../../components/pages/NewItem';\n\nconst EnhancedNewItem: FC<{ firebaseApp: firebase.app.App | undefined }> = ({\n  firebaseApp,\n}) => {\n  const inputTitle = useRef<HTMLInputElement>(null);\n  const inputBody = useRef<HTMLInputElement>(null);\n  // const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const onSubmitFunc = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (typeof firebaseApp !== 'undefined') {\n      const ref = firebaseApp.database().ref('items/');\n      ref\n        .orderByKey()\n        .limitToLast(1)\n        .once('value')\n        .then((snapshot) => {\n          let newId = 1;\n          snapshot.forEach((childSnapshot) => {\n            const childSnapshotKey = childSnapshot.key;\n            newId =\n              childSnapshotKey && parseInt(childSnapshotKey, 10) + 1 > newId\n                ? parseInt(childSnapshotKey, 10) + 1\n                : newId;\n          });\n          if (inputTitle.current && inputBody.current) {\n            ref\n              .child(newId.toString())\n              .set({\n                id: newId,\n                title: inputTitle.current.value,\n                body: inputBody.current.value,\n                createdAt: Date.now(),\n                updatedAt: Date.now(),\n              })\n              .then(() => {\n                navigate('/');\n              })\n              .catch(() => {\n                alert('Synchronization failed');\n              });\n          }\n        })\n        .catch(() => {\n          alert('Synchronization failed');\n        });\n    }\n  };\n  // const onSubmitFunc = (event: React.FormEvent<HTMLFormElement>) => {\n  //   event.preventDefault();\n  //   if (inputTitle.current && inputBody.current) {\n  //     dispatch(addItem(inputTitle.current.value, inputBody.current.value));\n  //     navigate('/');\n  //   }\n  // };\n\n  return (\n    <>\n      <NewItem\n        inputTitle={inputTitle}\n        inputBody={inputBody}\n        onSubmitFunc={onSubmitFunc}\n      />\n    </>\n  );\n};\n\nexport default EnhancedNewItem;\n","/Users/machoair/Desktop/react-test/todo-app/src/components/pages/NewItem.tsx",[],"/Users/machoair/Desktop/react-test/todo-app/src/components/pages/ItemDetails.tsx",[],"/Users/machoair/Desktop/react-test/todo-app/src/containers/pages/EditItem.tsx",["101"],"import React, { FC, useRef, useState, useEffect } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { useNavigate, useParams, Navigate } from 'react-router';\nimport { useNavigate, useParams } from 'react-router';\nimport firebase from 'firebase/app';\nimport 'firebase/firebase-database';\n\n// import { TodoState, TodoItemState } from '../../reducer';\n// import { updateItem } from '../../actions';\nimport EditItem from '../../components/pages/EditItem';\nimport { ItemState, initailItemState } from '../../data/Item';\n\nconst EnhancedEditItem: FC<{ firebaseApp: firebase.app.App | undefined }> = ({\n  firebaseApp,\n}) => {\n  const inputTitle = useRef<HTMLInputElement>(null);\n  const inputBody = useRef<HTMLInputElement>(null);\n  const [item, setItem] = useState<ItemState>(initailItemState);\n  const navigate = useNavigate();\n  // const dispatch = useDispatch();\n  const { itemId } = useParams();\n  useEffect(() => {\n    if (typeof firebaseApp !== 'undefined') {\n      firebaseApp\n        .database()\n        .ref(`items/${itemId}/`)\n        .on('value', (snapshot) => {\n          const { key } = snapshot;\n          // eslint-disable-next-line\n          const { title, body, createdAt, updatedAt } = snapshot.val();\n          if (\n            typeof key === 'string' &&\n            typeof title === 'string' &&\n            typeof body === 'string' &&\n            typeof createdAt === 'number' &&\n            typeof updatedAt === 'number'\n          ) {\n            setItem({\n              id: parseInt(key, 10),\n              title,\n              body,\n              createdAt,\n              updatedAt,\n            });\n          } else {\n            navigate('/');\n          }\n        });\n    }\n  }, [firebaseApp, itemId, navigate]);\n  const onSubmitFunc = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (\n      inputTitle.current &&\n      inputBody.current &&\n      typeof firebaseApp !== 'undefined'\n    ) {\n      firebaseApp\n        .database()\n        .ref(`items/${itemId}`)\n        .set({\n          id: itemId,\n          title: inputTitle.current.value,\n          body: inputBody.current.value,\n          createdAt: Date.now(),\n          updatedAt: Date.now(),\n        })\n        .then(() => {\n          navigate('/');\n        })\n        .catch(() => {\n          alert('Synchronization failed');\n        });\n    }\n  };\n\n  return (\n    <EditItem\n      title={item.title}\n      body={item.body}\n      inputTitle={inputTitle}\n      inputBody={inputBody}\n      onSubmitFunc={onSubmitFunc}\n    />\n  );\n  // const content = useSelector<TodoState, { [key: number]: TodoItemState }>(\n  //   (state) => state.content,\n  // );\n  // const contentItemIds = Object.keys(content);\n\n  // if (contentItemIds.includes(itemId)) {\n  //   const { title, body } = content[Number(itemId)];\n  //   const onSubmitFunc = (event: React.FormEvent<HTMLFormElement>) => {\n  //     event.preventDefault();\n  //     if (inputTitle.current && inputBody.current) {\n  //       dispatch(\n  //         updateItem(\n  //           Number(itemId),\n  //           inputTitle.current.value,\n  //           inputBody.current.value,\n  //         ),\n  //       );\n  //       navigate('/');\n  //     }\n  //   };\n\n  //   return (\n  //     <EditItem\n  //       title={title}\n  //       body={body}\n  //       inputTitle={inputTitle}\n  //       inputBody={inputBody}\n  //       onSubmitFunc={onSubmitFunc}\n  //     />\n  //   );\n  // }\n\n  // return <Navigate to=\"/\" replace />;\n};\n\nexport default EnhancedEditItem;\n","/Users/machoair/Desktop/react-test/todo-app/src/components/pages/EditItem.tsx",[],"/Users/machoair/Desktop/react-test/todo-app/src/data/Item.ts",[],"/Users/machoair/Desktop/react-test/todo-app/src/components/templates/Layout.tsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"102","replacedBy":"112"},{"ruleId":"104","replacedBy":"113"},{"ruleId":"106","replacedBy":"114"},{"ruleId":"108","replacedBy":"115"},{"ruleId":"110","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":41,"column":7,"nodeType":"119","messageId":"120","endLine":41,"endColumn":18},{"ruleId":"102","replacedBy":"112"},{"ruleId":"104","replacedBy":"113"},{"ruleId":"106","replacedBy":"114"},{"ruleId":"108","replacedBy":"115"},{"ruleId":"110","replacedBy":"116"},{"ruleId":"121","severity":1,"message":"122","line":52,"column":11,"nodeType":"123","messageId":"120","endLine":52,"endColumn":42},{"ruleId":"121","severity":1,"message":"122","line":67,"column":11,"nodeType":"123","messageId":"120","endLine":67,"endColumn":33},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"102","replacedBy":"124"},{"ruleId":"104","replacedBy":"125"},{"ruleId":"106","replacedBy":"126"},{"ruleId":"108","replacedBy":"127"},{"ruleId":"110","replacedBy":"128"},{"ruleId":"121","severity":1,"message":"122","line":48,"column":17,"nodeType":"123","messageId":"120","endLine":48,"endColumn":48},{"ruleId":"121","severity":1,"message":"122","line":53,"column":11,"nodeType":"123","messageId":"120","endLine":53,"endColumn":42},{"ruleId":"121","severity":1,"message":"122","line":72,"column":11,"nodeType":"123","messageId":"120","endLine":72,"endColumn":42},"lines-around-directive",["129"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["129"],[],[],[],[],"no-console","Unexpected console statement.","MemberExpression","unexpected","no-alert","Unexpected alert.","CallExpression",["129"],[],[],[],[],"padding-line-between-statements"]