[{"/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/App.tsx":"1","/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/reducer.ts":"2","/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/containers/pages/Home.tsx":"3","/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/reportWebVitals.ts":"4","/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/components/templates/Header.tsx":"5","/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/data/Item.ts":"6","/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/components/pages/Home.tsx":"7","/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/index.tsx":"8","/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/containers/pages/EditItem.tsx":"9","/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/components/pages/TestPage.tsx":"10","/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/components/pages/ItemDetails.tsx":"11","/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/components/templates/Footer.tsx":"12","/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/components/pages/NewItem.tsx":"13","/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/components/pages/EditItem.tsx":"14","/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/containers/pages/NewItem.tsx":"15","/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/containers/pages/ItemDetails.tsx":"16"},{"size":2147,"mtime":1613889459835,"results":"17","hashOfConfig":"18"},{"size":2060,"mtime":1614485814160,"results":"19","hashOfConfig":"18"},{"size":2226,"mtime":1614494501637,"results":"20","hashOfConfig":"18"},{"size":485,"mtime":1607955893796,"results":"21","hashOfConfig":"18"},{"size":2590,"mtime":1610365566053,"results":"22","hashOfConfig":"18"},{"size":233,"mtime":1609506443419,"results":"23","hashOfConfig":"18"},{"size":829,"mtime":1614064220318,"results":"24","hashOfConfig":"18"},{"size":804,"mtime":1614411694457,"results":"25","hashOfConfig":"18"},{"size":3536,"mtime":1610257976827,"results":"26","hashOfConfig":"18"},{"size":8986,"mtime":1610870149928,"results":"27","hashOfConfig":"18"},{"size":1109,"mtime":1609156986863,"results":"28","hashOfConfig":"18"},{"size":770,"mtime":1610349730037,"results":"29","hashOfConfig":"18"},{"size":875,"mtime":1609158582729,"results":"30","hashOfConfig":"18"},{"size":990,"mtime":1609157937546,"results":"31","hashOfConfig":"18"},{"size":4832,"mtime":1614495183064,"results":"32","hashOfConfig":"18"},{"size":3004,"mtime":1610257895818,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1lq4lng",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},"/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/App.tsx",[],["74","75","76","77","78"],"/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/reducer.ts",[],"/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/containers/pages/Home.tsx",[],"/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/reportWebVitals.ts",[],["79","80","81","82","83"],"/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/components/templates/Header.tsx",[],["84","85","86","87","88"],"/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/data/Item.ts",[],["89","90","91","92","93"],"/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/components/pages/Home.tsx",[],"/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/index.tsx",[],"/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/containers/pages/EditItem.tsx",["94"],"import React, { FC, useRef, useState, useEffect } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { useNavigate, useParams, Navigate } from 'react-router';\nimport { useNavigate, useParams } from 'react-router';\nimport firebase from 'firebase/app';\nimport 'firebase/firebase-database';\n\n// import { TodoState, TodoItemState } from '../../reducer';\n// import { updateItem } from '../../actions';\nimport EditItem from '../../components/pages/EditItem';\nimport { ItemState, initailItemState } from '../../data/Item';\n\nconst EnhancedEditItem: FC<{ firebaseApp: firebase.app.App | undefined }> = ({\n  firebaseApp,\n}) => {\n  const inputTitle = useRef<HTMLInputElement>(null);\n  const inputBody = useRef<HTMLInputElement>(null);\n  const [item, setItem] = useState<ItemState>(initailItemState);\n  const navigate = useNavigate();\n  // const dispatch = useDispatch();\n  const { itemId } = useParams();\n  useEffect(() => {\n    if (typeof firebaseApp !== 'undefined') {\n      firebaseApp\n        .database()\n        .ref(`items/${itemId}/`)\n        .on('value', (snapshot) => {\n          const { key } = snapshot;\n          // eslint-disable-next-line\n          const { title, body, createdAt, updatedAt } = snapshot.val();\n          if (\n            typeof key === 'string' &&\n            typeof title === 'string' &&\n            typeof body === 'string' &&\n            typeof createdAt === 'number' &&\n            typeof updatedAt === 'number'\n          ) {\n            setItem({\n              id: parseInt(key, 10),\n              title,\n              body,\n              createdAt,\n              updatedAt,\n            });\n          } else {\n            navigate('/');\n          }\n        });\n    }\n  }, [firebaseApp, itemId, navigate]);\n  const onSubmitFunc = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (\n      inputTitle.current &&\n      inputBody.current &&\n      typeof firebaseApp !== 'undefined'\n    ) {\n      firebaseApp\n        .database()\n        .ref(`items/${itemId}`)\n        .set({\n          id: itemId,\n          title: inputTitle.current.value,\n          body: inputBody.current.value,\n          createdAt: Date.now(),\n          updatedAt: Date.now(),\n        })\n        .then(() => {\n          navigate('/');\n        })\n        .catch(() => {\n          alert('Synchronization failed');\n        });\n    }\n  };\n\n  return (\n    <EditItem\n      title={item.title}\n      body={item.body}\n      inputTitle={inputTitle}\n      inputBody={inputBody}\n      onSubmitFunc={onSubmitFunc}\n    />\n  );\n  // const content = useSelector<TodoState, { [key: number]: TodoItemState }>(\n  //   (state) => state.content,\n  // );\n  // const contentItemIds = Object.keys(content);\n\n  // if (contentItemIds.includes(itemId)) {\n  //   const { title, body } = content[Number(itemId)];\n  //   const onSubmitFunc = (event: React.FormEvent<HTMLFormElement>) => {\n  //     event.preventDefault();\n  //     if (inputTitle.current && inputBody.current) {\n  //       dispatch(\n  //         updateItem(\n  //           Number(itemId),\n  //           inputTitle.current.value,\n  //           inputBody.current.value,\n  //         ),\n  //       );\n  //       navigate('/');\n  //     }\n  //   };\n\n  //   return (\n  //     <EditItem\n  //       title={title}\n  //       body={body}\n  //       inputTitle={inputTitle}\n  //       inputBody={inputBody}\n  //       onSubmitFunc={onSubmitFunc}\n  //     />\n  //   );\n  // }\n\n  // return <Navigate to=\"/\" replace />;\n};\n\nexport default EnhancedEditItem;\n","/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/components/pages/TestPage.tsx",["95","96","97","98","99","100","101","102","103","104","105","106","107"],"import React, { FC } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/storage';\nimport { Image, Progress, Button } from 'semantic-ui-react';\nimport { useDropzone } from 'react-dropzone';\n\n// Dropzoneの設定\nconst acceptFile = 'image/*';\nconst maxFileSize = 1048576;\n\n// previewを追加\ntype MyFile = File & {\n  preview: string;\n};\n\nconst TestPage: FC<{ firebaseApp: firebase.app.App | undefined }> = ({\n  firebaseApp,\n}) => {\n  // State\n  const [files, setFiles] = React.useState<MyFile[]>([]);\n  const [uploading, setUploading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n\n  /*\n  ドロップした時の処理\n  */\n  const onDrop = React.useCallback((acceptedFiles: File[]) => {\n    console.log('onDrop');\n\n    // previewの追加\n    setFiles(\n      acceptedFiles.map((file) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        }),\n      ),\n    );\n  }, []);\n\n  // Dropzone\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: acceptFile,\n    minSize: 0,\n    maxSize: maxFileSize,\n  });\n\n  const onUpload = async () => {\n    console.log('onUpload start');\n\n    // ローディングをOn。progressを初期化\n    setUploading(true);\n    setProgress(0);\n\n    const uploadImageAsPromise = (file: File) => {\n      console.log('uploadImageAsPromise start');\n\n      // アップロード先のファイルパスの作成\n      const fileName = file.name;\n      if (typeof firebaseApp !== 'undefined') {\n        const storageRef = firebaseApp\n          .storage()\n          .ref()\n          .child(`images/${fileName}`);\n\n        return new Promise((resolve, reject) => {\n          // Upload file\n          const task = storageRef.put(file);\n\n          // Update progress bar\n          task.on(\n            firebase.storage.TaskEvent.STATE_CHANGED,\n            (snapshot) => {\n              const percent =\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n              console.log(`${percent}% done`);\n            },\n            (err) => {\n              // 失敗時\n              console.log('upload error');\n              reject(err);\n            },\n            () => {\n              // 成功時\n              console.log('upload complete.');\n              task\n                .then((snapshot: firebase.storage.UploadTaskSnapshot) => {\n                  resolve(snapshot.ref.getDownloadURL());\n                })\n                .catch(() => console.log('error'));\n            },\n          );\n        })\n          .then((downloadURL) => {\n            console.log(`Finished uploading file: ${fileName}`);\n\n            // progressを更新する\n            setProgress((oldProgress) => oldProgress + 1);\n\n            return downloadURL;\n          })\n          .catch(() => {\n            console.log('Error:uploadImageAsPromise');\n          });\n      }\n\n      return undefined;\n    };\n\n    // 複数のファイルアップロードをPromise.allで並列に実行する\n    const result = await Promise.all(\n      files.map((file) => {\n        return uploadImageAsPromise(file);\n      }),\n    );\n\n    console.log('Upload result');\n    console.log(result);\n\n    // ローディングを終了し、リストを空に\n    setUploading(false);\n    setProgress(0);\n    setFiles([]);\n\n    alert('送信されました');\n  };\n\n  // アップロード中はCircularを表示する\n  if (uploading === true) {\n    const percent = Math.round((progress / files.length) * 100);\n    console.log(`Loadingの表示。Progreass:${progress} Percent:${percent}`);\n\n    return (\n      <Progress percent={percent} progress />\n      // <Grid container className={classes.root} spacing={3} justify=\"center\">\n      //   <Grid item xs={6}>\n      //     <Paper variant=\"outlined\" elevation={3} className={classes.paper}>\n      //       <CircularProgress\n      //         className={classes.circular}\n      //         variant=\"determinate\"\n      //         value={percent}\n      //       />\n      //     </Paper>\n      //   </Grid>\n      // </Grid>\n    );\n  }\n  // // タイルを敷き詰められるように、一部画像のサイズは大きくする\n  // const tile_cols = 3;\n  // let tile_featured = [];\n  // switch (files.length % tile_cols) {\n  //   case 0:\n  //     tile_featured = [];\n  //     break;\n  //   case 1:\n  //     tile_featured = [0, files.length - 1];\n  //     break;\n  //   case 2:\n  //     tile_featured = [0];\n  //     break;\n  // }\n\n  // // サムネイルの作成\n  // const thumbs = files.map((file, index) => (\n  //   <GridListTile\n  //     key={file.preview}\n  //     cols={tile_featured.indexOf(index) >= 0 ? 2 : 1}\n  //     rows={1}\n  //   >\n  //     <img src={file.preview} alt={file.name} />\n  //     <GridListTileBar\n  //       title={file.name}\n  //       subtitle={file.size}\n  //       actionIcon={\n  //         <IconButton aria-label={`star ${file.name}`} className={classes.icon}>\n  //           <InfoIcon />\n  //         </IconButton>\n  //       }\n  //       actionPosition=\"left\"\n  //       className={classes.titleBar}\n  //     />\n  //   </GridListTile>\n  // ));\n\n  const diabledButton = files.length === 0;\n\n  return (\n    <>\n      {/* eslint-disable-next-line */}\n      <div {...getRootProps()} className=\"dropzone\">\n        {/* eslint-disable-next-line */}\n        <input {...getInputProps()} />\n        {isDragActive ? (\n          <p>Drop the files here ...</p>\n        ) : (\n          <p>\n            Drag &apos;n&apos; drop some files here, or click to select files\n          </p>\n        )}\n      </div>\n      <Button\n        onClick={onUpload}\n        variant=\"outlined\"\n        color=\"blue\"\n        disabled={diabledButton}\n      >\n        Upload\n      </Button>\n      {files.map((file) => (\n        <Image\n          key={file.name}\n          src={file.preview}\n          alt={file.name}\n          size=\"small\"\n        />\n      ))}\n    </>\n    // <Grid container className={classes.root} spacing={3} justify=\"center\">\n    //   <Grid item xs={6}>\n    //     <Paper variant=\"outlined\" elevation={3} className={classes.paper}>\n    //       <Typography variant=\"h4\">Upload image files to GCS</Typography>\n    //       <div>\n    //         <Paper className={classes.dropzone} {...getRootProps()}>\n    //           <input {...getInputProps()} />\n    //           {isDragActive ? (\n    //             <p>Drop the files here ...</p>\n    //           ) : (\n    //             <p>Drag 'n' drop some files here, or click to select files</p>\n    //           )}\n    //         </Paper>\n    //         <Button\n    //           onClick={onUpload}\n    //           variant=\"outlined\"\n    //           color=\"primary\"\n    //           disabled={diabledButton}\n    //           className={classes.upButton}\n    //           startIcon={<CloudUploadIcon />}\n    //         >\n    //           Upload\n    //         </Button>\n    //         <aside className={classes.thumbsContainer}>\n    //           <GridList\n    //             cellHeight={200}\n    //             className={classes.gridList}\n    //             cols={tile_cols}\n    //           >\n    //             {thumbs}\n    //           </GridList>\n    //         </aside>\n    //       </div>\n    //     </Paper>\n    //   </Grid>\n    // </Grid>\n  );\n\n  // const [imgFile, setImgFile] = React.useState('');\n  // const imgDownload = React.useCallback(() => {\n  //   if (typeof firebaseApp !== 'undefined') {\n  //     const storageRef = firebaseApp.storage().ref();\n  //     const imgSample = storageRef.child('logo.png');\n  //     imgSample\n  //       .getDownloadURL()\n  //       .then((url) => {\n  //         setImgFile(url);\n  //         console.log(url);\n  //       })\n  //       .catch((error) => {\n  //         console.log(error);\n  //       });\n  //   }\n  // }, [firebaseApp]);\n\n  // const btnUploadChange = React.useCallback(\n  //   (ev: React.ChangeEvent<HTMLInputElement>) => {\n  //     if (\n  //       typeof firebaseApp !== 'undefined' &&\n  //       ev.currentTarget.files !== null\n  //     ) {\n  //       const storageRef = firebaseApp.storage().ref();\n  //       const uploadRef = storageRef.child('upload.png');\n  //       const f = ev.currentTarget.files[0];\n  //       uploadRef\n  //         .put(f)\n  //         .then(() => {\n  //           uploadRef\n  //             .getDownloadURL()\n  //             .then((url) => {\n  //               setImgFile(url);\n  //             })\n  //             .catch((error) => {\n  //               console.log(error);\n  //             });\n  //         })\n  //         .catch((error) => {\n  //           console.log(error);\n  //         });\n  //     }\n  //   },\n  //   [firebaseApp],\n  // );\n\n  // return (\n  //   <>\n  //     <h1>テストページ</h1>\n  //     <Image src={imgFile} size=\"small\" />\n  //     <div id=\"imgSample\" />\n  //     <Button onClick={imgDownload}>Click Here</Button>\n  //     <input type=\"file\" id=\"btnUpload\" onChange={btnUploadChange} />\n  //   </>\n  // );\n};\n\nexport default TestPage;\n",["108","109","110","111","112"],"/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/components/pages/ItemDetails.tsx",[],"/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/components/templates/Footer.tsx",[],"/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/components/pages/NewItem.tsx",[],"/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/components/pages/EditItem.tsx",[],"/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/containers/pages/NewItem.tsx",["113","114","115","116","117","118","119","120","121"],"/Users/machoair/projects/20210220_react-firebase-portfolio/todo-app/src/containers/pages/ItemDetails.tsx",["122","123"],"import React, { FC, useState, useEffect } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\n// import { useParams, useNavigate, Navigate } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/firebase-database';\n\nimport ItemDetails from '../../components/pages/ItemDetails';\n// import { deleteItem } from '../../actions';\n// import { TodoState, TodoItemState } from '../../reducer';\nimport { ItemState, initailItemState } from '../../data/Item';\n\nconst EnhancedItemDetails: FC<{\n  firebaseApp: firebase.app.App | undefined;\n}> = ({ firebaseApp }) => {\n  const { itemId } = useParams();\n  // const dispatch = useDispatch();\n  const [item, setItem] = useState<ItemState>(initailItemState);\n  const navigate = useNavigate();\n  // const content = useSelector<TodoState, { [key: number]: TodoItemState }>(\n  //   (state) => state.content,\n  // );\n  useEffect(() => {\n    if (typeof firebaseApp !== 'undefined') {\n      firebaseApp\n        .database()\n        .ref(`items/${itemId}/`)\n        .once('value')\n        .then((snapshot) => {\n          const { key } = snapshot;\n          // eslint-disable-next-line\n          const { title, body, createdAt, updatedAt } = snapshot.val();\n          if (\n            typeof key === 'string' &&\n            typeof title === 'string' &&\n            typeof body === 'string' &&\n            typeof createdAt === 'number' &&\n            typeof updatedAt === 'number'\n          ) {\n            setItem({\n              id: parseInt(key, 10),\n              title,\n              body,\n              createdAt,\n              updatedAt,\n            });\n          } else {\n            navigate('/');\n          }\n        })\n        .catch(() => {\n          alert('Synchronization failed');\n        });\n    }\n  }, [firebaseApp, itemId, navigate]);\n\n  const deleteFunc = () => {\n    if (typeof firebaseApp !== 'undefined') {\n      firebaseApp\n        .database()\n        .ref(`items/${itemId}/`)\n        .remove()\n        .then(() => {\n          navigate('/');\n        })\n        .catch(() => {\n          alert('Remove failed');\n        });\n    }\n  };\n\n  return (\n    <ItemDetails\n      itemId={itemId}\n      title={item.title}\n      body={item.body}\n      createdAt={item.createdAt}\n      updatedAt={item.updatedAt}\n      deleteFunc={deleteFunc}\n    />\n  );\n  // const contentItemIds = Object.keys(content);\n\n  // if (contentItemIds.includes(itemId)) {\n  //   const { title, body, createdAt, updatedAt } = content[Number(itemId)];\n  //   const deleteFunc = () => {\n  //     dispatch(deleteItem(Number(itemId)));\n  //     navigate('/');\n  //   };\n\n  //   return (\n  //     <ItemDetails\n  //       itemId={itemId}\n  //       title={title}\n  //       body={body}\n  //       createdAt={createdAt}\n  //       updatedAt={updatedAt}\n  //       deleteFunc={deleteFunc}\n  //     />\n  //   );\n  // }\n\n  // return <Navigate to=\"/\" replace />;\n};\n\nexport default EnhancedItemDetails;\n",{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"124","replacedBy":"134"},{"ruleId":"126","replacedBy":"135"},{"ruleId":"128","replacedBy":"136"},{"ruleId":"130","replacedBy":"137"},{"ruleId":"132","replacedBy":"138"},{"ruleId":"124","replacedBy":"134"},{"ruleId":"126","replacedBy":"135"},{"ruleId":"128","replacedBy":"136"},{"ruleId":"130","replacedBy":"137"},{"ruleId":"132","replacedBy":"138"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"139","severity":1,"message":"140","line":72,"column":11,"nodeType":"141","messageId":"142","endLine":72,"endColumn":42},{"ruleId":"143","severity":1,"message":"144","line":28,"column":5,"nodeType":"145","messageId":"142","endLine":28,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":49,"column":5,"nodeType":"145","messageId":"142","endLine":49,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":56,"column":7,"nodeType":"145","messageId":"142","endLine":56,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":76,"column":15,"nodeType":"145","messageId":"142","endLine":76,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":80,"column":15,"nodeType":"145","messageId":"142","endLine":80,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":85,"column":15,"nodeType":"145","messageId":"142","endLine":85,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":90,"column":30,"nodeType":"145","messageId":"142","endLine":90,"endColumn":41},{"ruleId":"143","severity":1,"message":"144","line":95,"column":13,"nodeType":"145","messageId":"142","endLine":95,"endColumn":24},{"ruleId":"143","severity":1,"message":"144","line":103,"column":13,"nodeType":"145","messageId":"142","endLine":103,"endColumn":24},{"ruleId":"143","severity":1,"message":"144","line":117,"column":5,"nodeType":"145","messageId":"142","endLine":117,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":118,"column":5,"nodeType":"145","messageId":"142","endLine":118,"endColumn":16},{"ruleId":"139","severity":1,"message":"140","line":125,"column":5,"nodeType":"141","messageId":"142","endLine":125,"endColumn":21},{"ruleId":"143","severity":1,"message":"144","line":131,"column":5,"nodeType":"145","messageId":"142","endLine":131,"endColumn":16},{"ruleId":"124","replacedBy":"146"},{"ruleId":"126","replacedBy":"147"},{"ruleId":"128","replacedBy":"148"},{"ruleId":"130","replacedBy":"149"},{"ruleId":"132","replacedBy":"150"},{"ruleId":"143","severity":1,"message":"144","line":67,"column":15,"nodeType":"145","messageId":"142","endLine":67,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":71,"column":15,"nodeType":"145","messageId":"142","endLine":71,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":76,"column":15,"nodeType":"145","messageId":"142","endLine":76,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":81,"column":30,"nodeType":"145","messageId":"142","endLine":81,"endColumn":41},{"ruleId":"143","severity":1,"message":"144","line":86,"column":13,"nodeType":"145","messageId":"142","endLine":86,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":103,"column":19,"nodeType":"141","messageId":"142","endLine":103,"endColumn":31},{"ruleId":"139","severity":1,"message":"140","line":106,"column":19,"nodeType":"141","messageId":"142","endLine":106,"endColumn":50},{"ruleId":"143","severity":1,"message":"144","line":116,"column":13,"nodeType":"145","messageId":"142","endLine":116,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":135,"column":5,"nodeType":"141","messageId":"142","endLine":135,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":52,"column":11,"nodeType":"141","messageId":"142","endLine":52,"endColumn":42},{"ruleId":"139","severity":1,"message":"140","line":67,"column":11,"nodeType":"141","messageId":"142","endLine":67,"endColumn":33},"lines-around-directive",["151"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["151"],[],[],[],[],"no-alert","Unexpected alert.","CallExpression","unexpected","no-console","Unexpected console statement.","MemberExpression",["151"],[],[],[],[],"padding-line-between-statements"]